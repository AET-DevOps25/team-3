# Server configuration
server.port=8085
server.tomcat.threads.max=200
server.tomcat.max-connections=10000
server.tomcat.accept-count=100
server.tomcat.connection-timeout=60s

# Async configuration
spring.mvc.async.request-timeout=600s
server.servlet.async.timeout=600s

# JWT configuration for token validation
jwt.secret=your-secret-key-here-make-it-long-and-secure-in-production

spring.application.name=genai-service

# Service URLs
auth.service.url=http://auth-service:8083
document.service.url=http://document-service:8084
genai.backend.url=http://genai:8081

# Rate limiting
rate.limit.requests.per.minute=60

# Actuator configuration
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
management.health.defaults.enabled=true
management.endpoint.health.probes.enabled=true
spring.jackson.serialization.fail-on-empty-beans=false
management.metrics.web.server.request.autotime.enabled=true
management.metrics.web.server.request.metric-name=http_server_requests
# Enable Prometheus export
management.metrics.export.prometheus.enabled=true

# Database configuration (reusing existing PostgreSQL instance)
spring.datasource.url=${SPRING_DATASOURCE_URL_GENAI:jdbc:postgresql://postgres:5432/genai_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Logging
logging.level.de.tum.cit.aet.genai=WARN 