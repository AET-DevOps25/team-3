services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Dashboard port
    volumes:
      # Mount the static configuration files into the container
      - "./traefik/traefik.yml:/etc/traefik/traefik.yml:ro"
      - "./traefik/acme.json:/letsencrypt/acme.json"
      # Mount the Docker socket
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - proxy

  client:
    image: ghcr.io/aet-devops25/team-3/client:ec2-{{ image_tag }}
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`studymate-tum.xyz`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=myresolver"
      - "traefik.http.services.client.loadbalancer.server.port=80"

  auth-service:
    image: ghcr.io/aet-devops25/team-3/auth-service:{{ image_tag }}
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=myresolver"
      - "traefik.http.routers.auth.priority=100"
      - "traefik.http.services.auth.loadbalancer.server.port=8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/auth_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - postgres

  document-service:
    image: ghcr.io/aet-devops25/team-3/document-service:{{ image_tag }}
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.document.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/api/documents`)"
      - "traefik.http.routers.document.entrypoints=websecure"
      - "traefik.http.routers.document.tls.certresolver=myresolver"
      - "traefik.http.routers.document.priority=100"
      - "traefik.http.services.document.loadbalancer.server.port=8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/document_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - postgres

  genai-service:
    image: ghcr.io/aet-devops25/team-3/genai-service:{{ image_tag }}
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genai-service.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/api/genai`)"
      - "traefik.http.routers.genai-service.entrypoints=websecure"
      - "traefik.http.routers.genai-service.tls.certresolver=myresolver"
      - "traefik.http.routers.genai-service.priority=100"
      - "traefik.http.services.genai-service.loadbalancer.server.port=8085"
    environment:
      - GENAI_BACKEND_URL=http://genai:8081
      - DOCUMENT_SERVICE_URL=http://document-service:8084
    depends_on:
      - genai

  eureka-server:
    image: ghcr.io/aet-devops25/team-3/eureka-server:{{ image_tag }}
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.eureka.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/eureka`)"
      - "traefik.http.routers.eureka.entrypoints=websecure"
      - "traefik.http.routers.eureka.tls.certresolver=myresolver"
      - "traefik.http.routers.eureka.priority=100"
      - "traefik.http.services.eureka.loadbalancer.server.port=8761"

  genai:
    image: ghcr.io/aet-devops25/team-3/genai:{{ image_tag }}
    restart: unless-stopped
    environment:
      - WEAVIATE_HOST=weaviate
      - WEAVIATE_PORT=8090
      - OPEN_WEBUI_API_KEY_CHAT="{{ open_webui_api_key_chat }}"
      - OPEN_WEBUI_API_KEY_GEN="{{ open_webui_api_key_gen }}"
      - LANGSMITH_TRACING=true
      - LANGSMITH_ENDPOINT="https://api.smith.langchain.com"
      - LANGSMITH_API_KEY="{{ langsmith_api_key }}"
      - LANGSMITH_PROJECT="studymate"
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genai.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/genai`)"
      - "traefik.http.routers.genai.entrypoints=websecure"
      - "traefik.http.routers.genai.tls.certresolver=myresolver"
      - "traefik.http.services.genai.loadbalancer.server.port=8081"
    depends_on:
      - weaviate

  postgres:
    image: postgres:15
    ports: # TODO: remove?
      - "5432:5432"
    environment: # TODO: replace values with an env variables & secrets
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_DATABASES: auth_db,document_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database_setup_microservices.sql:/docker-entrypoint-initdb.d/database_setup_microservices.sql
    networks:
      - proxy

  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8090'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
    ports: # TODO: remove?
      - 8090:8090
      - 50051:50051
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - proxy
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      CLUSTER_HOSTNAME: 'node1'

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - proxy

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - proxy
    environment:
      - GF_SECURITY_ADMIN_USER= {{ grafana_admin_username }}
      - GF_SECURITY_ADMIN_PASSWORD= {{ grafana_admin_password }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/monitor`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    depends_on:
      - prometheus


volumes:
  pgdata:
  weaviate_data:
  grafana_data:

networks:
  proxy:
    name: proxy-net