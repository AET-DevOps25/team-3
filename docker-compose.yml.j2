version: '3.8'

services:
  client:
    image: ghcr.io/aet-devops25/team-3/client:{{ image_tag }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.middlewares=redirect-to-https"
      # Router for HTTP (redirects to HTTPS)
      - "traefik.http.routers.client-http.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/`) && !PathPrefix(`/api`, `/genai`)"
      - "traefik.http.routers.client-http.entrypoints=web"
      - "traefik.http.routers.client-http.middlewares=redirect-to-https"
      # Router for HTTPS
      - "traefik.http.routers.client-https.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/`) && !PathPrefix(`/api`, `/genai`)"
      - "traefik.http.routers.client-https.entrypoints=websecure"
      - "traefik.http.routers.client-https.tls.certresolver=letsencrypt"

    depends_on:
      - server

  server:
    image: ghcr.io/aet-devops25/team-3/server:{{ image_tag }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.middlewares=redirect-to-https"
      # Router for HTTP (redirects to HTTPS)
      - "traefik.http.routers.server-http.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/api`)"
      - "traefik.http.routers.server-http.entrypoints=web"
      - "traefik.http.routers.server-http.middlewares=redirect-to-https"
      # Router for HTTPS
      - "traefik.http.routers.server-https.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/api`)"
      - "traefik.http.routers.server-https.entrypoints=websecure"
      - "traefik.http.routers.server-https.tls.certresolver=letsencrypt"
    environment: # TODO: replace values with an env variables & secrets
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=placeholder
    depends_on:
      - postgres
      - weaviate

  genai:
    image: ghcr.io/aet-devops25/team-3/genai:{{ image_tag }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.genai.middlewares=redirect-to-https"
      # Router for HTTP (redirects to HTTPS)
      - "traefik.http.routers.genai-http.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/genai`)"
      - "traefik.http.routers.genai-http.entrypoints=web"
      - "traefik.http.routers.genai-http.middlewares=redirect-to-https"
      # Router for HTTPS
      - "traefik.http.routers.genai-https.rule=Host(`studymate-tum.xyz`) && PathPrefix(`/genai`)"
      - "traefik.http.routers.genai-https.entrypoints=websecure"
      - "traefik.http.routers.genai-https.tls.certresolver=letsencrypt"
    depends_on:
      - weaviate

  postgres:
    image: postgres:15
    ports:
      - "5432:5432"
    environment: # TODO: replace values with an env variables & secrets
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
    volumes:
      - pgdata:/var/lib/postgresql/data

  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8082'
      - --scheme
      - http
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
    ports:
      - 8082:8082
      - 50051:50051
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      CLUSTER_HOSTNAME: 'node1'

  traefik:
    image: traefik:v2.11
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
      - ./acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

volumes:
  pgdata:
  weaviate_data:
